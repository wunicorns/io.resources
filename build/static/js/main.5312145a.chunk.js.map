{"version":3,"sources":["logo.svg","pages/Home/index.js","pages/Dashboard/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","props","React","Component","withRouter","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","root","display","listitem","width","maxWidth","backgroundColor","palette","background","paper","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","flexDirection","fixedHeight","classes","useState","open","setOpen","fixedHeightPaper","clsx","className","CssBaseline","AppBar","Toolbar","IconButton","edge","aria-label","onClick","component","noWrap","Badge","badgeContent","Drawer","Divider","List","ListItem","button","ListItemIcon","ListItemText","primary","inset","Container","Grid","item","xs","md","lg","Paper","Box","pt","App","active","exact","activeStyle","to","path","Dashboard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5312145a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass Home extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                home\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Home);","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport StarIcon from '@material-ui/icons/Star';\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright Â© '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Copyright\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n\r\n  listitem: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nfunction Dashboard() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Dashboard\r\n          </Typography>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List component=\"nav\" className={classes.listitem} aria-label=\"contacts\">\r\n            <ListItem button>\r\n                <ListItemIcon>\r\n                  <StarIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Test1\" />\r\n            </ListItem>\r\n            <ListItem button>\r\n                <ListItemText inset primary=\"Test1\" />\r\n            </ListItem>\r\n        </List>\r\n        <Divider />\r\n        \r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* Chart */}\r\n            <Grid item xs={12} md={8} lg={9}>\r\n              <Paper className={fixedHeightPaper}>\r\n                Chart\r\n              </Paper>\r\n            </Grid>\r\n            {/* Recent Deposits */}\r\n            <Grid item xs={12} md={4} lg={3}>\r\n              <Paper className={fixedHeightPaper}>\r\n                Deposits\r\n              </Paper>\r\n            </Grid>\r\n            {/* Recent Orders */}\r\n            <Grid item xs={12}>\r\n              <Paper className={classes.paper}>\r\n                Orders\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Dashboard);","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Home from './pages/Home'\nimport Dashboard from './pages/Dashboard'\n\nimport {BrowserRouter, Route, Switch, NavLink} from 'react-router-dom'\nimport { Link } from '@material-ui/core';\n\nfunction App() {\n  const active = {color: \"red\"};\n\n   \n  return (\n    <BrowserRouter>\n      <nav>\n        <ul>\n          <li><NavLink exact={true} activeStyle={active} to=\"/\">Home</NavLink></li>\n          <li><NavLink activeStyle={active} to=\"/dashboard\">Dashboard</NavLink></li>\n        </ul>\n      </nav>\n      <Switch>\n        <Route path=\"/dashboard\" component={Dashboard} />\n        <Route path=\"/\" component={Home} />\n        \n      </Switch>\n    </BrowserRouter>    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}